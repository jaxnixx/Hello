# -*- coding: utf-8 -*-
"""3. To-Do List

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BxrZ2zQMDABM7vXX5e_iUaQdKDdGqiZi
"""

# Simple To-Do List Manager

todo_list = []

def show_list():
  print("\nYour To-Do List:")
  if not todo_list:
    print(" (empty)")
  else:
    for i, task in enumerate(todo_list,1):
      print (f" {i}. {task}")
  print()

def add_task():
  task = input("Enter a new task:")
  todo_list.append(task)
  print(f"'{task}' added to the list.")

def remove_task():
  show_list()
  try:
    task_num = int(input("Enter the number of the the task to remove: "))
    removed = todo_list.pop(task_num - 1)
    print(f"Removed '{removed}' from the list.")
  except (IndexError, ValueError):
    print("Invalid task number.")

#Main Loop
while True:
  print("\nOptions: add / remove / show / quit")
  choice = input("What would you like to do?").lower()

  if choice == "add":
    add_task()
  elif choice == "remove":
    remove_task()
  elif choice == "show":
    show_list()
  elif choice == "quit":
    print("Goodbye!")
    break
  else:
    print("Please choose a valid option.")

#student watchlist
from google.colab import files
uploaded = files.upload()

filename = list(uploaded.keys())[0]

with open(filename, 'r') as f:
  student_list = [line.strip() for line in f]

print(student_list)
roster_list = student_list.copy()

#StudentAttendance
absent_students = [] #refresh absent students list

#Show all students on roster
def show_roster():
  for i, student in enumerate(roster_list, 1):
    status = " (absent)" if student in absent_students else ""
    print("\n",(student),(status)) #states if student is absent after name
    print()#goes to next line after each name

# Take attendance by say which students are absent by roster number
def attendance():
  snapshot = roster_list
  #show roster for reference
  for i, student in enumerate(roster_list, 1):
    status = " (absent)" if student in absent_students else ""
    print("\n",(student),(status)) #states if student is absent after name
    print()
  #ask for absent students by roster number
  names = input("Enter the numbers of the students who are absent today (separated by spaces):")
  indexes = [int(n) - 1 for n in names.split()]
  indexes = sorted(set(indexes), reverse=True)
  # returns absent students inputted on this function run
  print("\nThe following students are absent today:\n")
  for i in indexes:
    if 0 <= i < len(snapshot):
      absent = roster_list[i]

      if absent in absent_students:
        print(f"{absent}.")

      else:
        absent_students.append(absent)
        if absent in student_list:
          student_list.remove(absent)
        print(absent)
    else:
        print(f"\nInvalid student number: {i+1}")

# lists all students absent based on all function runs in loop
def show_absent_students():
  print ("\n The following students are absent today:\n")
  for names in absent_students:
    print(names)
    print()

# lists all students present based on all function runs in loop
def show_present_students():
  print("\n The following students are present today:\n")
  for i, student in enumerate(student_list, 1):
    print(student)
    print()

#refreshes student list
def refresh():
  global student_list
  student_list = roster_list.copy()
  absent_students.clear()

refresh() #makes sure student list is refreshed before running loop
#Main Loop
while True:
  print("\n Options: view roster / take attendance / view absent students / view present students / refresh roster / quit ")
  choice = input("What would you like to do?").lower()

  if choice == "view roster":
    show_roster()
  elif choice == "take attendance":
    attendance()
  elif choice == "view absent students":
    show_absent_students()
  elif choice == "view present students":
    show_present_students()
  elif choice == "refresh roster":
    refresh()
  elif choice == "quit":
    refresh()
    print("\nHave a good day!")
    break
  else:
    print("Please choose a valid option.")